package com.fiap.postech.fase3.Parquimetro.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fiap.postech.fase3.Parquimetro.model.converter.LocalDateTimeConverter;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import org.hibernate.validator.constraints.br.CPF;

import java.time.LocalDateTime;
import java.util.List;

@Data
@AllArgsConstructor
@DynamoDBTable(tableName = "Condutor")
public class Condutor {
    public Condutor(){

    }
    @CPF
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String condutor_CPF;
    @NotNull(message = "O atributo nome é obrigatório!")
    @DynamoDBAttribute
    private String nome;
    @NotNull(message = "O rua nome é obrigatório!")
    @DynamoDBAttribute
    private String rua;
    @NotNull(message = "O atributo número do endereço é obrigatório!")
    @Min(0)
    @DynamoDBAttribute
    private int endereco_numero;
    @NotNull(message = "O atributo cidade é obrigatório!")
    @DynamoDBAttribute
    private String cidade;
    @NotNull(message = "O atributo bairro é obrigatório!")
    @DynamoDBAttribute
    private String bairro;
    @NotNull(message = "O atributo estado é obrigatório!")
    @DynamoDBAttribute
    private String estado;
    @NotNull(message = "O atributo celular é obrigatório!")
    @DynamoDBAttribute
    private String celular;
    @DynamoDBAttribute
    private List<Veiculo> veiculos;
    @DynamoDBAttribute
    private List<FormaPagamento> formaPagamentos;
    @DynamoDBAttribute
    private boolean flagTempoFixoHora;
    @DynamoDBAttribute
    private int duracaoEstacionamento;
    @DynamoDBAttribute
    @DynamoDBTypeConverted( converter = LocalDateTimeConverter.class )
    private LocalDateTime inicioEstacionamento;
    @DynamoDBAttribute
    private boolean statusEstacionamento;
    @DynamoDBAttribute
    private String placaVeiculoEstacionado;
}


